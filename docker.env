NODE_ENV=production

## More Information about docker.env
# visit: https://github.com/outline/outline/blob/main/.env.sample


## Required Variables
# Generate a hex-encoded 32-byte random key. You should use `openssl rand -hex 32`
# in your terminal to generate a random value.
SECRET_KEY={openssl rand -hex 32}
UTILS_SECRET={openssl rand -hex 32}
FORCE_HTTPS=false
ENABLE_UPDATES=true
WEB_CONCURRENCY=2
 
## Postgres Variables
DATABASE_URL=postgres://user:pass@postgres:5432/outline
DATABASE_URL_TEST=postgres://user:pass@postgres:5432/outline-test
PGSSLMODE=disable


## Redis Variables
REDIS_URL=redis://redis:6379

# URL should point to the fully qualified, publicly accessible URL. If using a
# proxy the port in URL and PORT may be different.
# localhost:3000 -> DOMANINS
# AWS 에서 3000포트 열어서 ALB 연결 -> Route53 연결
URL={DOMAINS}


# Specify what storage system to use. Possible value is one of "s3" or "local".
# For "local", the avatar images and document attachments will be saved on local disk. 
FILE_STORAGE=local

# If "local" is configured for FILE_STORAGE above, then this sets the parent directory under
# which all attachments/images go. Make sure that the process has permissions to create
# this path and also to write files to it.
FILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data

# Maximum allowed size for the uploaded attachment.
FILE_STORAGE_UPLOAD_MAX_SIZE=262144000


# To configure Slack auth, you'll need to create an Application at
# => https://api.slack.com/apps
#
# When configuring the Client ID, add a redirect URL under "OAuth & Permissions":
# https://<URL>/auth/slack.callback
SLACK_CLIENT_ID={BOT CLIENT ID}
SLACK_CLIENT_SECRET={BOT CLIENT SECRET}